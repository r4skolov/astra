{"version":3,"file":"tabs.min.js","mappings":";MAAA,MAAMA,EACLC,YAAYC,GACXC,KAAKD,KAAaA,EAClBC,KAAKC,KAAaD,KAAKD,KAAKG,cAAc,wBAC1CF,KAAKG,QAAa,IAAIC,IAAI,IAAIJ,KAAKC,KAAKI,iBAAiB,2BACvDC,KAAKC,GAAU,CACfA,EAAMC,QAAQC,OACdF,MAEFP,KAAKU,WAAa,IAAIN,IAAI,IAAIJ,KAAKD,KAAKM,iBAAiB,wBACvDC,KAAKC,GAAU,CAACA,EAAMC,QAAQG,IAAKJ,MACrCP,KAAKY,KAAaC,KAAKC,SAASC,SAAS,IAAIC,MAAM,GACnDhB,KAAKiB,QAAa,KAClBjB,KAAKkB,OAAa,IACnB,CAEAC,cAAcC,GACb,MAAMC,EAAW,IAAIxB,EAAKuB,GAG1B,OAFAC,EAASC,OAEFD,CACR,CAEAE,OAAOC,GACN,MAAMC,EAAO,IAAIzB,KAAKG,QAAQsB,QAE9B,IAAK,MAAOC,EAAKC,KAAW3B,KAAKG,QAAQyB,UACpCF,IAAQF,EACXG,EAAOE,UAAUC,IAAI,UAErBH,EAAOE,UAAUE,OAAO,UAI1B,IAAK,MAAOL,EAAKM,KAAchC,KAAKU,WAAWkB,UAC1CF,IAAQF,EACXQ,EAAUH,UAAUC,IAAI,UAExBE,EAAUH,UAAUE,OAAO,UAI7B/B,KAAKkB,OAASO,EAAKQ,QAAQT,EAC5B,CAEAF,OACC,MAAMG,EAAO,IAAIzB,KAAKG,QAAQsB,QAE9BzB,KAAKC,KAAKiC,aAAa,OAAQ,WAE/BlC,KAAKC,KAAKkC,iBAAiB,WAAYC,IACnB,SAAfA,EAAMC,OACTD,EAAME,iBAENtC,KAAKG,QAAQoC,IAAId,EAAK,IAAIe,SAGR,QAAfJ,EAAMC,OACTD,EAAME,iBAENtC,KAAKG,QAAQoC,IAAId,EAAKA,EAAKgB,OAAS,IAAID,SAGtB,cAAfJ,EAAMC,OACTD,EAAME,iBAENtC,KAAKG,QAAQoC,IAAId,EAAKZ,KAAK6B,IAAI,EAAG1C,KAAKiB,QAAU,KAAKuB,SAGpC,eAAfJ,EAAMC,OACTD,EAAME,iBAENtC,KAAKG,QAAQoC,IAAId,EAAKZ,KAAK8B,IAAIlB,EAAKgB,OAAS,EAAGzC,KAAKiB,QAAU,KAAKuB,QACrE,IAGD,IAAK,MAAOd,EAAKC,KAAW3B,KAAKG,QAAQyB,UACxCD,EAAOO,aAAa,WAAY,KAChCP,EAAOO,aAAa,KAAO,UAASlC,KAAKY,QAAQc,KACjDC,EAAOO,aAAa,OAAQ,OAC5BP,EAAOO,aAAa,gBAAkB,aAAYlC,KAAKY,QAAQc,KAE/DC,EAAOQ,iBAAiB,SAAUC,IACjCA,EAAME,iBAENtC,KAAKuB,OAAOG,EAAI,IAGjBC,EAAOQ,iBAAiB,SAAUC,IACjCpC,KAAKiB,QAAUQ,EAAKQ,QAAQP,EAAI,IAGjCC,EAAOQ,iBAAiB,YAAaC,IACjB,UAAfA,EAAMC,MAAmC,UAAfD,EAAMC,OACnCD,EAAME,iBAENtC,KAAKuB,OAAOG,GACb,IAIF,IAAK,MAAOA,EAAKM,KAAchC,KAAKU,WAAWkB,UAC9CI,EAAUE,aAAa,KAAO,aAAYlC,KAAKY,QAAQc,KACvDM,EAAUE,aAAa,OAAQ,YAC/BF,EAAUE,aAAa,kBAAoB,UAASlC,KAAKY,QAAQc,KAGlE1B,KAAKuB,OAAOE,EAAK,GAClB,EAGD,MAAMf,EAAakC,SAASvC,iBAAiB,eAE7C,IAAK,MAAM2B,KAAatB,EAAY,CACtBb,EAAKgD,OAAOb,EAC1B","sources":["webpack:///./source/js/tabs.js"],"sourcesContent":["class Tabs {\r\n\tconstructor(root) {\r\n\t\tthis.root       = root;\r\n\t\tthis.list       = this.root.querySelector(':scope > [data-list]');\r\n\t\tthis.buttons    = new Map([...this.list.querySelectorAll(':scope > [data-target]')]\r\n\t\t\t.map((entry) => [\r\n\t\t\t\tentry.dataset.target,\r\n\t\t\t\tentry,\r\n\t\t\t]));\r\n\t\tthis.containers = new Map([...this.root.querySelectorAll(':scope > [data-tab]')]\r\n\t\t\t.map((entry) => [entry.dataset.tab, entry]));\r\n\t\tthis.salt       = Math.random().toString(36).slice(2);\r\n\t\tthis.current    = null;\r\n\t\tthis.active     = null;\r\n\t}\r\n\r\n\tstatic create(element) {\r\n\t\tconst instance = new Tabs(element);\r\n\t\tinstance.init();\r\n\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tselect(name) {\r\n\t\tconst keys = [...this.buttons.keys()];\r\n\r\n\t\tfor (const [key, button] of this.buttons.entries()) {\r\n\t\t\tif (key === name) {\r\n\t\t\t\tbutton.classList.add('active');\r\n\t\t\t} else {\r\n\t\t\t\tbutton.classList.remove('active');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const [key, container] of this.containers.entries()) {\r\n\t\t\tif (key === name) {\r\n\t\t\t\tcontainer.classList.add('active');\r\n\t\t\t} else {\r\n\t\t\t\tcontainer.classList.remove('active');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.active = keys.indexOf(name);\r\n\t}\r\n\r\n\tinit() {\r\n\t\tconst keys = [...this.buttons.keys()];\r\n\r\n\t\tthis.list.setAttribute('role', 'tablist');\r\n\r\n\t\tthis.list.addEventListener('keydown', (event) => {\r\n\t\t\tif (event.code === 'Home') {\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tthis.buttons.get(keys[0]).focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (event.code === 'End') {\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tthis.buttons.get(keys[keys.length - 1]).focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (event.code === 'ArrowLeft') {\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tthis.buttons.get(keys[Math.max(0, this.current - 1)]).focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (event.code === 'ArrowRight') {\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tthis.buttons.get(keys[Math.min(keys.length - 1, this.current + 1)]).focus();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor (const [key, button] of this.buttons.entries()) {\r\n\t\t\tbutton.setAttribute('tabindex', '0');\r\n\t\t\tbutton.setAttribute('id', `button_${this.salt}_${key}`);\r\n\t\t\tbutton.setAttribute('role', 'tab');\r\n\t\t\tbutton.setAttribute('aria-controls', `container_${this.salt}_${key}`);\r\n\r\n\t\t\tbutton.addEventListener('click', (event) => {\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tthis.select(key);\r\n\t\t\t});\r\n\r\n\t\t\tbutton.addEventListener('focus', (event) => {\r\n\t\t\t\tthis.current = keys.indexOf(key);\r\n\t\t\t});\r\n\r\n\t\t\tbutton.addEventListener('keypress', (event) => {\r\n\t\t\t\tif (event.code === 'Enter' || event.code === 'Space') {\r\n\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\tthis.select(key);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfor (const [key, container] of this.containers.entries()) {\r\n\t\t\tcontainer.setAttribute('id', `container_${this.salt}_${key}`);\r\n\t\t\tcontainer.setAttribute('role', 'tabpanel');\r\n\t\t\tcontainer.setAttribute('aria-labelledby', `button_${this.salt}_${key}`);\r\n\t\t}\r\n\r\n\t\tthis.select(keys[0]);\r\n\t}\r\n}\r\n\r\nconst containers = document.querySelectorAll('[data-tabs]');\r\n\r\nfor (const container of containers) {\r\n\tconst tabs = Tabs.create(container);\r\n}\r\n"],"names":["Tabs","constructor","root","this","list","querySelector","buttons","Map","querySelectorAll","map","entry","dataset","target","containers","tab","salt","Math","random","toString","slice","current","active","static","element","instance","init","select","name","keys","key","button","entries","classList","add","remove","container","indexOf","setAttribute","addEventListener","event","code","preventDefault","get","focus","length","max","min","document","create"],"sourceRoot":""}